@ Typical RPL symbols to copy/paste:
@ « » →
@ Stack diagram symbols:
@ I = Integer number
@ R = Real number
@ Z = Complex number
@ S = String
@ L = List
@ U = Unit object
@ V = Vector
@ M = Matrix
@ N = Variable name
@ O = Any object
@ P = Program
@ A = Algebraic object (symbolic)


@#name lib56_menu
{
AUTOSIMPLIFY
RULEMATCH
RULEAPPLY1
RULEAPPLY
→Q

}


@#name lib56_msgtable
{
##1,ERR_SYMBOLICEXPECTED "Expected a symbolic"
##1,ERR_NOTAVALIDRULE "Not a valid rule"
##1,ERR_INVALIDUSERDEFINEDFUNCTION "Invalid user-defined function"
}


@#name lib56_cmdhelp
{
AUTOSIMPLIFY
"Apply basic simplifications
to an expression
A → A"

RULEMATCH
"Get information about how
a rule matches an expression
A A<rule> → A { A A<match> ... } I"

RULEAPPLY1
"Apply rules once

A (A<rule> or L<rules>) → A I"

RULEAPPLY
"Apply rules repeateadly until
there's no more changes
A (A<rule> or L<rules>) → A I"

→Q
"Approximate number with fraction
(denominator < 2^63)
R → A<fraction>"

}


@#name lib56_autosimplify_level1
{
'0+.XX:→.XX'                                        @ REMOVE TERMS WITH ZERO
'INV(1):→1'                                         @ ELIMINATE OPERATION ON ONE
'1*.XX:→.XX'                                        @ REMOVE MULTIPLY BY ONE
'.XX^1:→.XX'                                        @ REMOVE EXPONENT OF 1
'√.XX:→.XX^INV(2)'                                  @ ELIMINATE SQUARE ROOT FOR OTHER RULES TO WORK
'.NN*.vX+.NM*.vX:→(.NN+.NM)*.vX'                    @ ADD TERMS IN THE SAME VARIABLE AS LONG AS THE REST IS NUMERIC
'.NN*.vX^.Nexp+.NM*.vX^.Nexp:→(.NN+.NM)*.vX^.Nexp'  @ ADD TERMS IN THE SAME VARIABLE AS LONG AS THE REST IS NUMERIC
'.xX*INV(.xX):→1'                                   @ BASIC TERM CANCELATION
'.XX^.NN*INV(.XX^.NM):→.XX^(.NN-.NM)'               @ CANCEL OUT TERMS WITH EXPONENTS
'.XX^.NN*INV(.XX):→.XX^(.NN-1)'                     @ CANCEL OUT TERMS WITHOUT EXPONENT IN DENOMINATOR
'.XX*INV(.XX^.NM):→.XX^(1-.NM)'                     @ CANCEL OUT TERMS WITHOUT EXPONENT IN NUMERATOR
'.XX^.NN*.XX^.NM:→.XX^(.NN+.NM)'                    @ ADD EXPONENTS IN MULTIPLYING TERMS
'.XX*.XX^.NM:→.XX^(1+.NM)'                          @ ADD EXPONENTS WITH IMPLICIT EXPONENT 1
'.XX^INV(2):→√.XX'                                  @ BACK TO SQUARE ROOTS
}

