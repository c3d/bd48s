/*
 * Copyright (c) 2014, Claudio Lapilli and the newRPL Team
 * All rights reserved.
 * This file is released under the 3-clause BSD license.
 * See the file LICENSE.txt that shipped with this distribution.
 */

#ifndef NEWRPL_H
#define NEWRPL_H

#include <stdint.h>

// BUILD SYSTEM PROVIDES NEWRPL_BUILDNUM MACRO WITH THE COMMIT NUMBER

// EXTERNAL API FOR THE NEWRPL MACHINE - TO BE USED ONLY BY USER LIBRARIES
// BASIC CONSTANTS AND TYPE DEFINITIONS FOR THE RUN ENVIRONMENT

typedef void (*LIBHANDLER)(void);

typedef uint16_t uint16_t;
typedef uint32_t WORD;
typedef uint8_t BYTE;
typedef WORD *WORDPTR;
typedef BYTE *BYTEPTR;
typedef int32_t int32_t;
typedef uint32_t uint32_t;
typedef int64_t int64_t;
typedef uint64_t uint64_t;
typedef intptr_t intptr_t;
#define NUMBER2PTR(a) ((WORDPTR)(intptr_t)(WORD)(a))

#ifdef __cplusplus
"C" {
#endif

// CONSTANTS THAT CONTROL THE MAIN RPL ENGINE

// NUMBER OF STATIC REGISTERS FOR FAST HANDLING OF REAL NUMBERS
#define REAL_REGISTERS 10
// NUMBER OF SIMULTANEOUS CONVERSIONS OF int32_t TO REALS THAT CAN BE DONE
#define int32_t2REAL      4

// MAXIMUM PRECISION ALLOWED IN THE SYSTEM
// MAKE SURE REAL_SCRATCHMEM CAN HAVE AT LEAST "REAL_REGISTERS*PRECISION_MAX*2/9" WORDS
// WARNING: THIS CONSTANT CANNOT BE CHANGED UNLESS ALL PRECOMPUTED CONSTANT TABLES ARE CHANGED ACCORDINGLY
#define REAL_PRECISION_MAX 2016 // DOUBLE PRECISION JUST TO GENERATE THE TABLES
#define MAX_USERPRECISION  2000

// SCRATCHPAD MEMORY TO ALLOCATE DIGITS FOR ARBITRARY PRECISION TEMP RESULTS
// THIS IS THE NUMBER OF WORDS, EACH GOOD FOR 8 DIGITS.
// THIS AREA WILL ALSO BE SHARED WITH THE FILE SYSTEM, SO MAKE SURE
// REAL_REGISTER_STORAGE HAS AT LEAST 512 BYTES TO STORE ONE SECTOR

#define REAL_REGISTER_STORAGE ((REAL_PRECISION_MAX*4)/8+4)
#define int32_t_REGISTER_STORAGE  3
#define EXTRA_STORAGE int32_t2REAL*int32_t_REGISTER_STORAGE

// DEFINE THE LIMITS FOR THE EXPONENT RANGE FOR ALL REALS
// NOTE: THIS HAS TO FIT WITHIN THE FIELDS OF REAL_HEADER
#define REAL_EXPONENT_MAX   30000
#define REAL_EXPONENT_MIN   -30000

// ANGULAR MODES
#define ANGLENONE    -1
#define ANGLEDEG     0
#define ANGLERAD     1
#define ANGLEGRAD    2
#define ANGLEDMS     3

#ifndef UTF8LIB_H
#include "utf8lib.h"
#endif

#ifndef DECIMAL_H
#include "decimal.h"
#endif

#include "sysvars.h"

#include "arithmetic.h"

#endif // NEWRPL_H
